// <auto-generated />
using System;
using Grab.A.Seat.Domains.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Grab.A.Seat.Domains.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240210211349_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Grab.A.Seat.Shared.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BookingEndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BookingStartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Customer_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<Guid>("Table_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Customer_Id");

                    b.HasIndex("Table_Id");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88c8351d-ccd8-467e-bd47-5fb326c67726"),
                            BookingEndDateTime = new DateTime(2024, 2, 10, 23, 13, 48, 862, DateTimeKind.Utc).AddTicks(74),
                            BookingReference = "0001",
                            BookingStartDateTime = new DateTime(2024, 2, 10, 21, 13, 48, 862, DateTimeKind.Utc).AddTicks(73),
                            Comments = "Non Veg Only",
                            CreationDate = new DateTime(2024, 2, 10, 21, 13, 48, 862, DateTimeKind.Utc).AddTicks(78),
                            Customer_Id = new Guid("3dd83670-a736-48fc-838f-bceab7a30735"),
                            PartySize = 2,
                            Table_Id = new Guid("220105b1-487d-4e9d-b2df-21ce54d30051")
                        },
                        new
                        {
                            Id = new Guid("bf3992a2-a8f8-4323-ac37-89ab7f4ad01a"),
                            BookingEndDateTime = new DateTime(2024, 2, 10, 23, 13, 48, 862, DateTimeKind.Utc).AddTicks(81),
                            BookingReference = "0002",
                            BookingStartDateTime = new DateTime(2024, 2, 10, 21, 13, 48, 862, DateTimeKind.Utc).AddTicks(81),
                            Comments = "Window seat",
                            CreationDate = new DateTime(2024, 2, 10, 21, 13, 48, 862, DateTimeKind.Utc).AddTicks(82),
                            Customer_Id = new Guid("54f3537a-7724-4fad-bb5e-348cc9a4d19d"),
                            PartySize = 2,
                            Table_Id = new Guid("afd7fea7-3bfb-4231-99db-02bbd19304fb")
                        },
                        new
                        {
                            Id = new Guid("7356f531-3b5e-4b24-bf43-c72604bae1b3"),
                            BookingEndDateTime = new DateTime(2024, 2, 10, 23, 13, 48, 862, DateTimeKind.Utc).AddTicks(85),
                            BookingReference = "0003",
                            BookingStartDateTime = new DateTime(2024, 2, 10, 21, 13, 48, 862, DateTimeKind.Utc).AddTicks(85),
                            Comments = "",
                            CreationDate = new DateTime(2024, 2, 10, 21, 13, 48, 862, DateTimeKind.Utc).AddTicks(86),
                            Customer_Id = new Guid("54f3537a-7724-4fad-bb5e-348cc9a4d19d"),
                            PartySize = 2,
                            Table_Id = new Guid("4e221cd3-1111-44e8-849f-1ab4770dd17e")
                        });
                });

            modelBuilder.Entity("Grab.A.Seat.Shared.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "ContactNumber")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3dd83670-a736-48fc-838f-bceab7a30735"),
                            ContactNumber = "9876541232",
                            CreationDate = new DateTime(2024, 2, 10, 21, 13, 48, 861, DateTimeKind.Utc).AddTicks(9948),
                            Email = "srijanighosh87@gmail.com",
                            Name = "Srijani"
                        },
                        new
                        {
                            Id = new Guid("54f3537a-7724-4fad-bb5e-348cc9a4d19d"),
                            ContactNumber = "1234567895",
                            CreationDate = new DateTime(2024, 2, 10, 21, 13, 48, 861, DateTimeKind.Utc).AddTicks(9951),
                            Email = "sricheta1994@gmail.com",
                            Name = "Sricheta"
                        });
                });

            modelBuilder.Entity("Grab.A.Seat.Shared.Models.Sequence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("CuurentValue")
                        .HasColumnType("float");

                    b.Property<double>("IncreaseBy")
                        .HasColumnType("float");

                    b.Property<string>("SequenceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Start")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Sequences");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d588116a-435d-4c05-a40d-8db97ae4263a"),
                            CreationDate = new DateTime(2024, 2, 10, 21, 13, 48, 862, DateTimeKind.Utc).AddTicks(52),
                            CuurentValue = 1.0,
                            IncreaseBy = 1.0,
                            SequenceName = "Booking_Reference",
                            Start = 1.0
                        });
                });

            modelBuilder.Entity("Grab.A.Seat.Shared.Models.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TableNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("220105b1-487d-4e9d-b2df-21ce54d30051"),
                            Capacity = 2,
                            CreationDate = new DateTime(2024, 2, 10, 21, 13, 48, 862, DateTimeKind.Utc).AddTicks(30),
                            TableNumber = "Table01"
                        },
                        new
                        {
                            Id = new Guid("afd7fea7-3bfb-4231-99db-02bbd19304fb"),
                            Capacity = 5,
                            CreationDate = new DateTime(2024, 2, 10, 21, 13, 48, 862, DateTimeKind.Utc).AddTicks(33),
                            TableNumber = "Table02"
                        },
                        new
                        {
                            Id = new Guid("4e221cd3-1111-44e8-849f-1ab4770dd17e"),
                            Capacity = 2,
                            CreationDate = new DateTime(2024, 2, 10, 21, 13, 48, 862, DateTimeKind.Utc).AddTicks(35),
                            TableNumber = "Table03"
                        },
                        new
                        {
                            Id = new Guid("74981a7f-8441-48ab-a10c-5e58f368f4f6"),
                            Capacity = 3,
                            CreationDate = new DateTime(2024, 2, 10, 21, 13, 48, 862, DateTimeKind.Utc).AddTicks(37),
                            TableNumber = "Table04"
                        });
                });

            modelBuilder.Entity("Grab.A.Seat.Shared.Models.Booking", b =>
                {
                    b.HasOne("Grab.A.Seat.Shared.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Grab.A.Seat.Shared.Models.Table", "Table")
                        .WithMany("Bookings")
                        .HasForeignKey("Table_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Grab.A.Seat.Shared.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Grab.A.Seat.Shared.Models.Table", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
